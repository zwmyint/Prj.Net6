//https://www.tutlane.com/tutorial/rabbitmq/csharp-publish-message-to-rabbitmq-queue

using RabbitMQ.Client;

using System;

 

namespace RequestRabbitMQ

{

    class Program

    {

        static void Main(string[] args)

        {

            string UserName = "guest";

            string Password = "guest";

            string HostName = "localhost";

 

            //Main entry point to the RabbitMQ .NET AMQP client

            var connectionFactory = new RabbitMQ.Client.ConnectionFactory()

            {

                UserName = UserName,

                Password = Password,

                HostName = HostName

            };

 

            var connection = connectionFactory.CreateConnection();

            var model = connection.CreateModel();

            Console.WriteLine("Creating Exchange");

            // Create Exchange

            model.ExchangeDeclare("demoExchange", ExchangeType.Direct);

             Console.ReadLine();

        }

    }

}

// https://www.tutlane.com/tutorial/rabbitmq/csharp-read-messages-from-rabbitmq-queue

using System;

using RabbitMQ.Client;

 

namespace RabbitMQConsumer

{

    class Program

    {

        private const string UserName = "guest";

        private const string Password = "guest";

        private const string HostName = "localhost";

 

        static void Main(string[] args)

        {

            ConnectionFactory connectionFactory = new ConnectionFactory

            {

                HostName = HostName,

                UserName = UserName,

                Password = Password,

            };

            var connection = connectionFactory.CreateConnection();

            var channel = connection.CreateModel();

 

            // accept only one unack-ed message at a time

            // uint prefetchSize, ushort prefetchCount, bool global

 

            channel.BasicQos(0, 1, false);

            MessageReceiver messageReceiver = new MessageReceiver(channel);

            channel.BasicConsume("demoqueue", false, messageReceiver);

            Console.ReadLine();

        }

    }

}